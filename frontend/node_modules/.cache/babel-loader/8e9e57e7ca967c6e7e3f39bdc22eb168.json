{"ast":null,"code":"import _classCallCheck from\"C:/Users/cesar/Desktop/School/Software Engineering/Project-0/frontend/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";import _createClass from\"C:/Users/cesar/Desktop/School/Software Engineering/Project-0/frontend/node_modules/@babel/runtime/helpers/esm/createClass.js\";import http from\"../http-common\";var RestaurantDataService=/*#__PURE__*/function(){function RestaurantDataService(){_classCallCheck(this,RestaurantDataService);}_createClass(RestaurantDataService,[{key:\"getAll\",value:function getAll(){var page=arguments.length>0&&arguments[0]!==undefined?arguments[0]:0;// this one is for nodemon server\n//return http.get(`?page=${page}`);\n// this one is for mongoDB\nreturn http.get(\"restaurants?page=\".concat(page));}},{key:\"get\",value:function get(id){// this one is from the tutortial but is deprecated but worth noting \n//return http.get(`/id/${id}`);\n// this one is active with MongoDb\nreturn http.get(\"/restaurant/id/\".concat(id));// this one works with nodemon server\n//return http.get(`/id/${id}`);\n}},{key:\"find\",value:function find(query){var by=arguments.length>1&&arguments[1]!==undefined?arguments[1]:\"name\";var page=arguments.length>2&&arguments[2]!==undefined?arguments[2]:0;// this one is for nodemon server\n//return http.get(`?${by}=${query}&page=${page}`);\n// this one is for mongoDB\nreturn http.get(\"restaurants?\".concat(by,\"=\").concat(query,\"&page=\").concat(page));}},{key:\"createReview\",value:function createReview(data){// nodemon servers\n// return http.post(\"/review\", data);\n// mongoDB\nreturn http.post(\"/review-new\",data);}},{key:\"updateReview\",value:function updateReview(data){// nodemon servers\n//return http.put(\"/review\", data);\n// mongoDB\nreturn http.put(\"/review-edit\",data);}},{key:\"deleteReview\",value:function deleteReview(id,userId){// nodemon servers\n//return http.delete(`/review?id=${id}`, {data:{user_id: userId}});\n// mongoDB\nreturn http.delete(\"/review-delete?id=\".concat(id),{data:{user_id:userId}});}},{key:\"getCuisines\",value:function getCuisines(id){return http.get(\"/cuisines\");}}]);return RestaurantDataService;}();export default new RestaurantDataService();","map":{"version":3,"sources":["C:/Users/cesar/Desktop/School/Software Engineering/Project-0/frontend/src/services/restaurant.js"],"names":["http","RestaurantDataService","page","get","id","query","by","data","post","put","userId","delete","user_id"],"mappings":"oTAAA,MAAOA,CAAAA,IAAP,KAAiB,gBAAjB,C,GAEMC,CAAAA,qB,+JACJ,iBAAiB,IAAVC,CAAAA,IAAU,2DAAH,CAAG,CAEf;AACA;AAEA;AACA,MAAOF,CAAAA,IAAI,CAACG,GAAL,4BAA6BD,IAA7B,EAAP,CACD,C,mBAED,aAAIE,EAAJ,CAAQ,CAEN;AACA;AAEA;AACA,MAAOJ,CAAAA,IAAI,CAACG,GAAL,0BAA2BC,EAA3B,EAAP,CAEA;AACA;AACD,C,oBAED,cAAKC,KAAL,CAAmC,IAAvBC,CAAAA,EAAuB,2DAAlB,MAAkB,IAAVJ,CAAAA,IAAU,2DAAH,CAAG,CAEjC;AACA;AAEA;AACA,MAAOF,CAAAA,IAAI,CAACG,GAAL,uBAAwBG,EAAxB,aAA8BD,KAA9B,kBAA4CH,IAA5C,EAAP,CACD,C,4BAED,sBAAaK,IAAb,CAAmB,CAEjB;AACA;AAEA;AACA,MAAOP,CAAAA,IAAI,CAACQ,IAAL,CAAU,aAAV,CAAyBD,IAAzB,CAAP,CACD,C,4BAED,sBAAaA,IAAb,CAAmB,CAEjB;AACA;AAEA;AACA,MAAOP,CAAAA,IAAI,CAACS,GAAL,CAAS,cAAT,CAAyBF,IAAzB,CAAP,CACD,C,4BAED,sBAAaH,EAAb,CAAiBM,MAAjB,CAAyB,CAEvB;AACA;AAEA;AACA,MAAOV,CAAAA,IAAI,CAACW,MAAL,6BAAiCP,EAAjC,EAAuC,CAACG,IAAI,CAAC,CAACK,OAAO,CAAEF,MAAV,CAAN,CAAvC,CAAP,CACD,C,2BAED,qBAAYN,EAAZ,CAAgB,CACd,MAAOJ,CAAAA,IAAI,CAACG,GAAL,aAAP,CACD,C,qCAIH,cAAe,IAAIF,CAAAA,qBAAJ,EAAf","sourcesContent":["import http from \"../http-common\";\r\n\r\nclass RestaurantDataService {\r\n  getAll(page = 0) {\r\n    \r\n    // this one is for nodemon server\r\n    //return http.get(`?page=${page}`);\r\n\r\n    // this one is for mongoDB\r\n    return http.get(`restaurants?page=${page}`);\r\n  }\r\n\r\n  get(id) {\r\n    \r\n    // this one is from the tutortial but is deprecated but worth noting \r\n    //return http.get(`/id/${id}`);\r\n\r\n    // this one is active with MongoDb\r\n    return http.get(`/restaurant/id/${id}`);\r\n    \r\n    // this one works with nodemon server\r\n    //return http.get(`/id/${id}`);\r\n  }\r\n\r\n  find(query, by = \"name\", page = 0) {\r\n\r\n    // this one is for nodemon server\r\n    //return http.get(`?${by}=${query}&page=${page}`);\r\n    \r\n    // this one is for mongoDB\r\n    return http.get(`restaurants?${by}=${query}&page=${page}`);\r\n  } \r\n\r\n  createReview(data) {\r\n\r\n    // nodemon servers\r\n    // return http.post(\"/review\", data);\r\n    \r\n    // mongoDB\r\n    return http.post(\"/review-new\", data);\r\n  }\r\n\r\n  updateReview(data) {\r\n    \r\n    // nodemon servers\r\n    //return http.put(\"/review\", data);\r\n    \r\n    // mongoDB\r\n    return http.put(\"/review-edit\", data);\r\n  }\r\n\r\n  deleteReview(id, userId) {\r\n    \r\n    // nodemon servers\r\n    //return http.delete(`/review?id=${id}`, {data:{user_id: userId}});\r\n  \r\n    // mongoDB\r\n    return http.delete(`/review-delete?id=${id}`, {data:{user_id: userId}});\r\n  }\r\n\r\n  getCuisines(id) {\r\n    return http.get(`/cuisines`);\r\n  }\r\n\r\n}\r\n\r\nexport default new RestaurantDataService();"]},"metadata":{},"sourceType":"module"}